name: API testing
on: workflow_dispatch

jobs:
  deploy-and-test-run:
    runs-on: ubuntu-latest
    steps:
      - name: Pull API Docker image
        run: docker pull coherentsolutions/rest-training:2.0
      
      - name: Run API Docker container
        run: docker run -d -p 8082:8082 coherentsolutions/rest-training:2.0      
      
      - name: Setup .Net SDK
        uses: actions/setup-dotnet@v4
      
      - name: Get repository code
        uses: actions/checkout@v4
        
      - name: Restore NuGet packages
        run: dotnet restore ApiTestingSolution/ApiTestingSolution.sln
      
      - name: Build ApiTestingSolution
        run: dotnet build ApiTestingSolution/ApiTestingSolution.sln --configuration Release
      
      - name: Run tests
        run: dotnet test ApiTestingSolution/ApiTestingSolution.sln --logger "trx"
              
      - name: Publish Allure results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/TestResults/*.trx'
  generate-allure-report:
    needs: deploy-and-test-run
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check out code from GitHub repository
        uses: actions/checkout@v3

      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: test-results
          
      - name: Install Java
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.20.1/allure-2.20.1.tgz
          tar -zxvf allure-2.20.1.tgz
          sudo mv allure-2.20.1 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Generate Allure Report
        run: allure generate --clean

      - name: Publish Allure report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
